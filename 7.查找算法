//二分查找
int binarySearch(int []a,int v){
       int  left=0;
       int  right=a.length-1;//[left,right]
while(left<=right){
    mid=(left+right)/2;
    if(a[mid]>v){
         right=mid-1;
    }
    else if(a[mid]<v){
        left=mid+1;
    }
    else
    return mid;
}
return -1;
数据规模 :数组长度 
时间复杂度 最坏：0-1-2-4 1*2*2*2*......=N 2^x=n  O(logN)
类似一个满二叉树的结构 最后一层的格数=前面所有结点数量+1 
